"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

from pathlib import Path
from django.utils.translation import gettext_lazy as _


PROJECT_DIR = Path(__file__).resolve().parent.parent

BASE_DIR = PROJECT_DIR.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.sitemaps",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "wagtail.api.v2",
    "wagtail.contrib.forms",
    "wagtail.contrib.redirects",
    "wagtail.embeds",
    "wagtail.sites",
    "wagtail.users",
    "wagtail.snippets",
    "wagtail.documents",
    "wagtail.images",
    "wagtail.search",
    "wagtail.admin",
    "wagtail",
    "modelcluster",
    "taggit",
    "semkov.api",
    "semkov.apps.ads",
    "semkov.apps.core",
    "semkov.apps.forum",
    "semkov.apps.home",
    "semkov.apps.pages",
    "semkov.apps.search",
    "semkov.apps.user",
]

MIDDLEWARE = [
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.middleware.gzip.GZipMiddleware",
    "wagtail.contrib.redirects.middleware.RedirectMiddleware",
    "semkov.apps.core.middleware.language.LocaleMiddleware",
]

ROOT_URLCONF = "semkov.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [PROJECT_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "semkov.wsgi.application"

AUTH_USER_MODEL = "user.User"


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("POSTGRES_NAME", "semkov"),
        "USER": os.environ.get("POSTGRES_USER", "semkov"),
        "PASSWORD": os.environ.get("POSTGRES_PASS", "semkov"),
        "HOST": os.environ.get("POSTGRES_HOST", "localhost"),
        "PORT": os.environ.get("POSTGRES_PORT", 5432),
    }
}

# Cache backend
# https://docs.djangoproject.com/en/2.1/topics/cache/

CACHES = {"default": {"BACKEND": "django.core.cache.backends.dummy.DummyCache"}}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "ru"

LANGUAGES = [("ru", _("Russian")), ("en", _("English"))]

LOCALE_PATHS = (PROJECT_DIR / "apps" / "core" / "locale",)

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

USE_THOUSAND_SEPARATOR = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/ref/settings/#std-setting-STORAGES

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

STATICFILES_DIRS = (PROJECT_DIR / "static",)

STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}

STATIC_ROOT = BASE_DIR / "static"
STATIC_URL = "/static/"

MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = "/media/"

WAGTAILIMAGES_FORMAT_CONVERSIONS = {
    "avif": "avif",
    "bmp": "webp",
    "png": "png",
    "webp": "webp",
}

# Wagtail settings

WAGTAIL_SITE_NAME = "semkov"

BASE_URL = "https://semkov-gorodok.by"

WAGTAILADMIN_BASE_URL = "https://semkov-gorodok.by"

WAGTAIL_FRONTEND_LOGIN_URL = "/user/login/"


# Email settings

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

DEFAULT_FROM_EMAIL = "no-reply@manti.by"
DEFAULT_TO_EMAIL = "manti.by@gmail.com"

# Twilio account

TWILIO_FROM_NUMBER = "+18577031034"
TWILIO_ACCOUNT_SID = ""
TWILIO_AUTH_TOKEN = ""


DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

# Scrappers

POSITION_FILE_PATH = BASE_DIR / "data" / "position.json"
SCHEDULE_FILE_PATH = BASE_DIR / "data" / "schedule.json"

POSITIONS_URL = os.getenv(
    "POSITIONS_URL", "https://mrik.gov.by/delenie/papernyanskij-selsovet"
)

BUS_API_BASE_URL = os.getenv(
    "BUS_API_BASE_URL", "https://minsktrans.by/suburb/get-shedule.php"
)

BUS_API_POINT_FROM_ID = os.getenv("BUS_API_POINT_FROM_ID", "500253")
BUS_API_POINT_FROM_NAME = os.getenv("BUS_API_POINT_FROM_NAME", "ЩЕДРИНА/ЧЕРВЯКОВА")

BUS_API_POINT_TO_ID = os.getenv("BUS_API_POINT_TO_ID", "501131")
BUS_API_POINT_TO_NAME = os.getenv(
    "BUS_API_POINT_TO_NAME", "СЕМКОВ_ГОРОДОК(Папернянский_с/с)"
)

MINIBUS_BASE_URL = os.getenv(
    "MINIBUS_BASE_URL",
    "https://www.tuda-suda.by/poleznyashki/raspisanie/minsk/marshrutki",
)
MINIBUS_ROUTES = os.getenv(
    "MINIBUS_ROUTES",
    [
        "/485/komarovskij-rynok-brovki/shchedrina",
        "/485b/komarovskij-rynok-selets/shchedrina",
        "/485r/komarovskij-rynok-rogovo/shchedrina",
        "/485sh/komarovskij-rynok-shershuny/shchedrina",
    ],
)

GOOGLE_RECAPTCHA_SITE_KEY = os.getenv("GOOGLE_RECAPTCHA_SITE_KEY", None)
